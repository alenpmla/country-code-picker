// Mocks generated by Mockito 5.1.0 from annotations
// in country_picker/test/features/domain/usecases/get_all_countries_list_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:country_picker/features/country_picker/domain/entities/country.dart' as _i4;
import 'package:country_picker/features/country_picker/domain/repositories/country_list_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CountryListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryListRepository extends _i1.Mock
    implements _i2.CountryListRepository {
  MockCountryListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Country>> getAllCountryLists() =>
      (super.noSuchMethod(Invocation.method(#getAllCountryLists, []),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i3.Future<List<_i4.Country>>);
  @override
  _i3.Future<List<_i4.Country>> searchCountryList(String? searchQuery) =>
      (super.noSuchMethod(Invocation.method(#searchCountryList, [searchQuery]),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i3.Future<List<_i4.Country>>);
}
